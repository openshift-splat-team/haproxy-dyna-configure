# ---------------------------------------------------------------------
# Example configuration for a possible web application.  See the
# full configuration options online.
# https://www.haproxy.org/download/1.8/doc/configuration.txt
# ---------------------------------------------------------------------
# ---------------------------------------------------------------------
# Global settings
# ---------------------------------------------------------------------

global 
  daemon
  maxconn 4000
  pidfile /var/run/haproxy.pid
  stats socket /var/run/haproxy.sock user haproxy group haproxy mode 660 level admin expose-fd listeners
  ssl-default-bind-ciphers PROFILE=SYSTEM
  #  log /dev/log local0
  # to have these messages end up in /var/log/haproxy.log you will
  # need to:
  # 1) configure syslog to accept network log events.  This is done
  # by adding the '-r' option to the SYSLOGD_OPTIONS in
  # /etc/sysconfig/syslog
  # 2) configure local2 events to go to the /var/log/haproxy.log
  # file. A line like the following can be added to
  # /etc/sysconfig/syslog
  # local2.*                       /var/log/haproxy.log
  chroot /var/lib/haproxy
  user haproxy
  group haproxy
  # turn on stats unix socket
  # stats socket /var/lib/haproxy/stats
  # utilize system-wide crypto-policies
  ssl-default-server-ciphers PROFILE=SYSTEM
  # ---------------------------------------------------------------------
  # common defaults that all the 'listen' and 'backend' sections will
  # use if not designated in their block
  # ---------------------------------------------------------------------

defaults 
  mode tcp
  maxconn 3000
  log global
  log-format "%ci:%cp [%t] %ft %b/%s %Tw/%Tc/%Tt %B %ts %ac/%fc/%bc/%sc/%rc %sq/%bq ssl_fc_has_sni '%[ssl_fc_has_sni]' sni:'%[capture.req.hdr(0)]' ssl_fc_sni '%[ssl_fc_sni]' ssl_fc_protocol '%[ssl_fc_protocol]' ssl_bc '%[ssl_bc]' ssl_bc_alpn '%[ssl_bc_alpn]' ssl_bc_protocol '%[ssl_bc_protocol]' ssl_c_i_dn '%[ssl_c_i_dn()]' ssl_c_s_dn '%[ssl_c_s_dn()]' ssl_f_i_dn '%[ssl_f_i_dn()]' ssl_f_s_dn '%[ssl_f_s_dn]' ssl_fc_cipher '%[ssl_fc_cipher]' "
  option tcplog
  option redispatch
  option dontlognull
  option http-server-close
  option forwardfor except 127.0.0.0/8
  timeout http-request 10s
  timeout check 10s
  timeout connect 10s
  timeout client 1m
  timeout queue 1m
  timeout server 1m
  timeout http-keep-alive 10s
  retries 3
  
frontend dyna-frontend-443 
  mode tcp
  bind 0.0.0.0:8443 name dyna-frontend-443
  tcp-request content accept if { req_ssl_hello_type 1 }
  tcp-request inspect-delay 5000
